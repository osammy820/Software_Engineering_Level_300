Question 1
Software process models are abstract representations of the activities involved in producing/developing a software system. The software processes include: (1) Specification; i.e., defining what the system should do; (2) Design and implementation; deals with defining the organization of the system and implementing the system; (3) Validation – checking that it does what the customer wants; and (4) Evolution – changing the system in response to changing customer needs. The Software Process Model helps project managers plan their processes, estimate costs, identify challenges and communicate with teams and customers.

Question 2
Waterfall Process Model is a sequential development process that flows like a waterfall through all phases of a project (analysis, design, development, and testing), with each phase completely wrapping up before the next phase begins; whereas Agile process model refers to a software development approach based on iterative development. Agile methods break tasks into smaller iterations, or parts do not directly involve long term planning. 
Waterfall Process model is a sequential design process; the mythology is a systematic developing method that may be rather rigorous at times; and there is no way to change the specifications once the development begins and testing approach is rarely used. Agile process model on the other hand, uses an incremental development approach; breakdown the project into manageable pieces; it is versatility; changes can be done at any stage of the development process and testing is frequently done.
Waterfall requirements are clearly and accurately stated; Detailed documentation of each development stage provides resistance to changes in human resources; Careful planning of the project development structure reduces the number of problematic issues; Release date for the finished product, as well as its final cost can be calculated prior to development; The start and end points for each phase are set, which makes it easy to measure progress. The main drawback of the waterfall model is the difficulty of accommodating change after the process is underway. In principle, a phase has to be complete before moving onto the next phase. Agile fosters empowerment, responsibility, a variety of ideas, early benefit release, and continual improvement. It enables early decision testing and rejection. Main drawbacks of the Agile process model are it is time consuming and the cost of implementing an agile approach is just somewhat greater.

Question 3
Rational Unified Process (RUP) is an agile software development methodology. RUP splits the project life cycle into four phases (Inception, Elaboration, Construction and Transition). During each of the phases, all six core development disciplines take place: business modelling, requirements, analysis and design, implementation, testing, and deployment.

 Rational Unified Process phases
1.	Inception - Establish the business case for the system.
2.	Elaboration - Develop an understanding of the problem domain and the system architecture.
3.	Construction - System design, programming and testing.
4.	Transition - Deploy the system in its operating environment.

Rational Unified Process Benefits:
It allows you to deal with changing requirements regardless of whether they are coming from the customer or from the project itself. It emphasizes the need for accurate documentation. It forces integration to happen throughout the software development, more specifically in the construction phase.

Rational Unified Process Drawbacks:
Since RUP is a complicated procedure, successfully performing it requires software team members with great expertise. If some of the individuals on your software team are new to the field, it might be easier to choose a different software development process; The amount of documentation required for RUP can be time-consuming and expensive. Software teams with smaller budgets might benefit from choosing a more cost-efficient approach for their project; RUP may cause confusion during the testing stage for larger projects involving multiple components and software teams. Because of its emphasis on ongoing integration, those working on projects with multiple development streams may want to either slow down the RUP process or look for another development procedure.
